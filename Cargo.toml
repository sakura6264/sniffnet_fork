[package]
name = "sniffnet"
version = "1.2.2"
authors = ["Giuliano Bellini <gyulyvgc99@gmail.com>"]
edition = "2021"
description = "Application to comfortably monitor your network traffic"
readme = "README.md"
homepage = "https://sniffnet.net"
repository = "https://github.com/GyulyVGC/sniffnet"
license = "MIT OR Apache-2.0"
keywords = ["filter", "network", "packet", "sniffer", "gui"]
categories = ["visualization", "gui", "network-programming"]
include = [
    "/src/**/*.rs",
    "/LICENSE-MIT",
    "/LICENSE-APACHE",
    "/README.md",
    "/CHANGELOG.md",
    "/resources/countries_flags/**/*.svg",
    "/resources/DB/*.mmdb",
    "/resources/fonts/subset/*.ttf",
    "/resources/sounds/*.mp3",
    "/services.txt",
    "/build.rs",
]

[target."cfg(windows)"]
rustflags = ["-C", "target-feature=+crt-static"]

#═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

[profile.release]
opt-level = 3
lto = true
strip = true

#═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

[dependencies]
pcap = "1.2.0"
etherparse = "0.14.2"
chrono = { version = "0.4.35", default_features = false, features = ["clock"] }
plotters = { version = "0.3.5", default_features = false, features = ["area_series"] }
iced = { version = "0.12.1", features = ["tokio", "svg", "advanced", "lazy"] }
plotters-iced = "0.10.0"
maxminddb = "0.24.0"
confy = "0.6.1"
serde = { version = "1.0.197", default_features = false, features = ["derive"] }
rodio = { version = "0.17.3", default_features = false, features = ["mp3"] }
dns-lookup = "2.0.4"
toml = "0.8.11"
once_cell = "1.19.0"
ctrlc = { version = "3.4.4", features = ["termination"] }
rfd = "0.14.0"
phf = "0.11.2"
phf_shared = "0.11.2"
splines = "4.3.1"

[target.'cfg(not(target_arch = "powerpc64"))'.dependencies]
reqwest = { version = "0.11.24", default-features = false, features = ["json", "blocking", "rustls-tls"] }

[target.'cfg(target_arch = "powerpc64")'.dependencies]
reqwest = { version = "0.11.24", features = ["json", "blocking"] }

#───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

[dev-dependencies]
serde_test = "1.0.176"
rstest = "0.18.2"
serial_test = { version = "3.0.0", default_features = false }

#───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

[build-dependencies]
phf_codegen = "0.11.2"
phf_shared = "0.11.2"
rustrict = { version = "0.7.22", default-features = false, features = ["censor"] }
once_cell = "1.19.0"

[target."cfg(windows)".build-dependencies]
winres = "0.1.12"

#═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

[badges]
maintenance = { status = "actively-developed" }

#═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

[package.metadata.cross.target.x86_64-unknown-linux-gnu]
pre-build = [
    "dpkg --add-architecture amd64",
    "apt update -y && apt install -y libfreetype6-dev:amd64 libexpat1-dev:amd64 libpcap-dev:amd64 libasound2-dev:amd64 libfontconfig1-dev:amd64 libgtk-3-dev:amd64"
]

[package.metadata.cross.target.i686-unknown-linux-gnu]
pre-build = [
    "dpkg --add-architecture i386",
    "apt update -y && apt install -y libfreetype6-dev:i386 libexpat1-dev:i386 libpcap-dev:i386 libasound2-dev:i386 libfontconfig1-dev:i386 libgtk-3-dev:i386"
]

[package.metadata.cross.target.aarch64-unknown-linux-gnu]
pre-build = [
    "dpkg --add-architecture arm64",
    "apt update -y && apt install -y libfreetype6-dev:arm64 libexpat1-dev:arm64 libpcap-dev:arm64 libasound2-dev:arm64 libfontconfig1-dev:arm64 libgtk-3-dev:arm64"
]

[package.metadata.cross.target.armv7-unknown-linux-gnueabihf]
pre-build = [
    "dpkg --add-architecture armhf",
    "apt update -y && apt install -y libfreetype6-dev:armhf libexpat1-dev:armhf libpcap-dev:armhf libasound2-dev:armhf libfontconfig1-dev:armhf libgtk-3-dev:armhf"
]

#═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

[package.metadata.deb]
section = "Network"
license-file = "resources/packaging/LICENSE"
extended-description-file = "resources/packaging/linux/description.txt"
maintainer-scripts = "resources/packaging/linux/scripts/"
depends = "libasound2, libpcap0.8, libfontconfig1"
assets = [
    ["target/release/sniffnet", "/usr/bin/", "755"],
    ["resources/packaging/linux/sniffnet.desktop", "/usr/share/applications/", "644"],
    ["resources/packaging/linux/graphics/sniffnet_8x8.png", "/usr/share/icons/hicolor/8x8/apps/sniffnet.png", "644"],
    ["resources/packaging/linux/graphics/sniffnet_16x16.png", "/usr/share/icons/hicolor/16x16/apps/sniffnet.png", "644"],
    ["resources/packaging/linux/graphics/sniffnet_22x22.png", "/usr/share/icons/hicolor/22x22/apps/sniffnet.png", "644"],
    ["resources/packaging/linux/graphics/sniffnet_24x24.png", "/usr/share/icons/hicolor/24x24/apps/sniffnet.png", "644"],
    ["resources/packaging/linux/graphics/sniffnet_32x32.png", "/usr/share/icons/hicolor/32x32/apps/sniffnet.png", "644"],
    ["resources/packaging/linux/graphics/sniffnet_36x36.png", "/usr/share/icons/hicolor/36x36/apps/sniffnet.png", "644"],
    ["resources/packaging/linux/graphics/sniffnet_42x42.png", "/usr/share/icons/hicolor/42x42/apps/sniffnet.png", "644"],
    ["resources/packaging/linux/graphics/sniffnet_48x48.png", "/usr/share/icons/hicolor/48x48/apps/sniffnet.png", "644"],
    ["resources/packaging/linux/graphics/sniffnet_64x64.png", "/usr/share/icons/hicolor/64x64/apps/sniffnet.png", "644"],
    ["resources/packaging/linux/graphics/sniffnet_72x72.png", "/usr/share/icons/hicolor/72x72/apps/sniffnet.png", "644"],
    ["resources/packaging/linux/graphics/sniffnet_96x96.png", "/usr/share/icons/hicolor/96x96/apps/sniffnet.png", "644"],
    ["resources/packaging/linux/graphics/sniffnet_128x128.png", "/usr/share/icons/hicolor/128x128/apps/sniffnet.png", "644"],
    ["resources/packaging/linux/graphics/sniffnet_160x160.png", "/usr/share/icons/hicolor/160x160/apps/sniffnet.png", "644"],
    ["resources/packaging/linux/graphics/sniffnet_192x192.png", "/usr/share/icons/hicolor/192x192/apps/sniffnet.png", "644"],
    ["resources/packaging/linux/graphics/sniffnet_256x256.png", "/usr/share/icons/hicolor/256x256/apps/sniffnet.png", "644"],
    ["resources/packaging/linux/graphics/sniffnet_384x384.png", "/usr/share/icons/hicolor/384x384/apps/sniffnet.png", "644"],
    ["resources/packaging/linux/graphics/sniffnet_512x512.png", "/usr/share/icons/hicolor/512x512/apps/sniffnet.png", "644"],
    ["resources/packaging/linux/graphics/sniffnet_1024x1024.png", "/usr/share/icons/hicolor/1024x1024/apps/sniffnet.png", "644"]
]

#───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

[package.metadata.generate-rpm]
post_install_script = "setcap cap_net_raw,cap_net_admin=eip /usr/bin/sniffnet"
pre_uninstall_script = "setcap '' /usr/bin/sniffnet"
assets = [
    { source = "target/release/sniffnet", dest = "/usr/bin/", mode = "755" },
    { source = "resources/packaging/linux/sniffnet.desktop", dest = "/usr/share/applications/", mode = "644" },
    { source = "resources/packaging/linux/graphics/sniffnet_8x8.png", dest = "/usr/share/icons/hicolor/8x8/apps/sniffnet.png", mode = "644" },
    { source = "resources/packaging/linux/graphics/sniffnet_16x16.png", dest = "/usr/share/icons/hicolor/16x16/apps/sniffnet.png", mode = "644" },
    { source = "resources/packaging/linux/graphics/sniffnet_22x22.png", dest = "/usr/share/icons/hicolor/22x22/apps/sniffnet.png", mode = "644" },
    { source = "resources/packaging/linux/graphics/sniffnet_24x24.png", dest = "/usr/share/icons/hicolor/24x24/apps/sniffnet.png", mode = "644" },
    { source = "resources/packaging/linux/graphics/sniffnet_32x32.png", dest = "/usr/share/icons/hicolor/32x32/apps/sniffnet.png", mode = "644" },
    { source = "resources/packaging/linux/graphics/sniffnet_36x36.png", dest = "/usr/share/icons/hicolor/36x36/apps/sniffnet.png", mode = "644" },
    { source = "resources/packaging/linux/graphics/sniffnet_42x42.png", dest = "/usr/share/icons/hicolor/42x42/apps/sniffnet.png", mode = "644" },
    { source = "resources/packaging/linux/graphics/sniffnet_48x48.png", dest = "/usr/share/icons/hicolor/48x48/apps/sniffnet.png", mode = "644" },
    { source = "resources/packaging/linux/graphics/sniffnet_64x64.png", dest = "/usr/share/icons/hicolor/64x64/apps/sniffnet.png", mode = "644" },
    { source = "resources/packaging/linux/graphics/sniffnet_72x72.png", dest = "/usr/share/icons/hicolor/72x72/apps/sniffnet.png", mode = "644" },
    { source = "resources/packaging/linux/graphics/sniffnet_96x96.png", dest = "/usr/share/icons/hicolor/96x96/apps/sniffnet.png", mode = "644" },
    { source = "resources/packaging/linux/graphics/sniffnet_128x128.png", dest = "/usr/share/icons/hicolor/128x128/apps/sniffnet.png", mode = "644" },
    { source = "resources/packaging/linux/graphics/sniffnet_160x160.png", dest = "/usr/share/icons/hicolor/160x160/apps/sniffnet.png", mode = "644" },
    { source = "resources/packaging/linux/graphics/sniffnet_192x192.png", dest = "/usr/share/icons/hicolor/192x192/apps/sniffnet.png", mode = "644" },
    { source = "resources/packaging/linux/graphics/sniffnet_256x256.png", dest = "/usr/share/icons/hicolor/256x256/apps/sniffnet.png", mode = "644" },
    { source = "resources/packaging/linux/graphics/sniffnet_384x384.png", dest = "/usr/share/icons/hicolor/384x384/apps/sniffnet.png", mode = "644" },
    { source = "resources/packaging/linux/graphics/sniffnet_512x512.png", dest = "/usr/share/icons/hicolor/512x512/apps/sniffnet.png", mode = "644" },
    { source = "resources/packaging/linux/graphics/sniffnet_1024x1024.png", dest = "/usr/share/icons/hicolor/1024x1024/apps/sniffnet.png", mode = "644" }
]

[package.metadata.generate-rpm.requires]
alsa-lib = "*"
libpcap = "*"
fontconfig = "*"

#───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

[package.metadata.wix]
include = [".\\resources\\packaging\\windows\\setup.wxs"]
